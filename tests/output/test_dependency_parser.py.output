
# make sure dependency parser ref is one-step optimal

passed!
passed!

# testing on wsj

number non-projective trees: 0
# example 0  passed!
# example 1  passed!
# example 2  passed!
# example 3  passed!
# example 4  passed!
# example 5  passed!
# example 6  passed!
# example 7  passed!
# example 8  passed!
# example 9  passed!

# test dependency structure without learning
## test random policy
### rels=no
0->2 1->0 2->3 3->4 4->5
### rels=yes
0->3[2] 1->0[0] 2->3[3] 3->5[3] 4->5[0]
## test rels=no
## test rels=yes

# test simple branching trees, use_aggrevate=False
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.4.000000    4.000000           1      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]  *
.4.000000    4.000000           2      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]
..4.000000    4.000000           4      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]
....0.700000    1.900000           8      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..0.000000    0.100000          10      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..........0.000000    0.000000          20      2  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *

# test simple branching trees, use_aggrevate=True
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.3.100000    3.500000           1      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]  *
.1.600000    2.100000           2      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->1 3->..]  *
..0.700000    0.700000           4      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
....0.200000    0.000000           8      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..0.000000    0.000000          10      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]
..........0.000000    0.000000          20      2  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]

# Testing wsj parser, labeled=False, use_pos_stream=False, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41, n_actions = 3
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.18.880000   20.940000          1      1  [[1, 2, 23, 4, 21, ..]  [0->1 1->2 2->3 3->..]  *
.........................17.400000   22.540000         26      1  [[5, 5, 4, 4, 5, 58..]  [0->58 1->5 2->3 3-..]
........................15.860000   20.640000         50      1  [[2, 2, 3, 28, 3, 3..]  [0->28 1->3 2->3 3-..]  *
.........................14.100000   21.000000         75      2  [[2, 2, 3, 24, 5, 3..]  [0->24 1->0 2->1 3-..]
.........................13.260000   20.060000        100      2  [[1, 2, 11, 2, 9, 9..]  [0->11 1->2 2->0 3-..]  *
.........................15.700000   22.160000        125      3  [[3, 3, 3, 4, 14, 4..]  [0->4 1->4 2->4 3->..]
.........................12.480000   17.960000        150      3  [[1, 4, 1, 1]        ]  [0->4 1->2 2->4 3->4 ]  *
.........................11.280000   17.640000        175      4  [[3, 2, 3, 17, 3, 6..]  [0->17 1->0 2->3 3-..]  *
.........................10.760000   17.900000        200      4  [[1, 9, 1, 5, 5, 2,..]  [0->1 1->34 2->1 3-..]

# Testing wsj parser, labeled=False, use_pos_stream=True, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41, n_actions = 3
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.23.040000   26.820000          1      1  [[3, 3, 3, 4, 14, 4..]  [0->44 1->0 2->0 3-..]  *
.........................18.640000   23.540000         26      1  [[5, 2, 5, 5, 5, 25..]  [0->3 1->0 2->1 3->..]  *
........................13.440000   16.840000         50      1  [[3, 2, 3, 17, 3, 6..]  [0->3 1->2 2->3 3->..]  *
.........................12.240000   16.320000         75      2  [[1, 2, 11, 2, 9, 9..]  [0->2 1->2 2->11 3-..]  *
.........................9.340000    12.620000        100      2  [[2, 2, 23, 2, 6, 6..]  [0->3 1->2 2->0 3->..]  *
.........................8.280000    11.500000        125      3  [[2, 2, 20, 6, 6, 6..]  [0->2 1->2 2->20 3-..]  *
.........................7.180000    10.240000        150      3  [[2, 2, 11, 11, 5, ..]  [0->2 1->2 2->11 3-..]  *
.........................7.760000    12.460000        175      4  [[8, 29, 4, 4, 5, 1..]  [0->29 1->0 2->4 3-..]
.........................5.800000    9.900000         200      4  [[1, 2, 11, 2, 9, 9..]  [0->2 1->2 2->11 3-..]  *

# Testing wsj parser, labeled=True, use_pos_stream=False, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41, n_actions = 15
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.25.180000   28.560000          1      1  [[1, 2, 11, 2, 9, 9..]  [0->11[9] 1->11[9] ..]  *
.........................24.680000   28.400000         26      1  [[8, 8, 3, 8, 3, 6,..]  [0->8[1] 1->0[7] 2-..]  *
........................20.200000   24.540000         50      1  [[2, 2, 3, 39, 3, 7..]  [0->39[7] 1->2[1] 2..]  *
.........................17.960000   22.300000         75      2  [[1, 12, 4, 4, 1, 6..]  [0->12[7] 1->4[1] 2..]  *
.........................16.600000   21.260000        100      2  [[2, 2, 3, 28, 3, 3..]  [0->3[1] 1->3[1] 2-..]  *
.........................16.480000   22.340000        125      3  [[2, 2, 15, 2, 6, 6..]  [0->21[7] 1->2[1] 2..]
.........................14.760000   20.440000        150      3  [[2, 2, 8, 2, 7, 7,..]  [0->2[1] 1->2[1] 2-..]  *
.........................16.340000   21.600000        175      4  [[1, 5, 1, 4, 2, 33..]  [0->1[1] 1->33[7] 2..]
.........................12.860000   19.520000        200      4  [[15, 15, 3, 15, 5,..]  [0->2[1] 1->0[3] 2-..]  *

# Testing wsj parser, labeled=True, use_pos_stream=True, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41, n_actions = 15
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.24.780000   27.840000          1      1  [[6, 2, 6, 4, 2, 6]  ]  [0->6[2] 1->6[2] 2-..]  *
.........................20.000000   23.680000         26      1  [[1, 9, 1, 5, 5, 2,..]  [0->1[1] 1->23[1] 2..]  *
........................15.620000   20.140000         50      1  [[1, 3, 3, 53, 5, 3..]  [0->52[1] 1->2[1] 2..]  *
.........................14.420000   17.280000         75      2  [[2, 2, 20, 6, 6, 6..]  [0->1[1] 1->20[7] 2..]  *
.........................12.060000   15.240000        100      2  [[1, 2, 21, 5, 5, 2..]  [0->1[1] 1->2[4] 2-..]  *
.........................10.820000   14.060000        125      3  [[1, 36, 1, 5, 5, 1..]  [0->1[4] 1->36[7] 2..]  *
.........................8.520000    12.040000        150      3  [[2, 2, 3, 24, 5, 3..]  [0->2[1] 1->2[1] 2-..]  *
.........................7.980000    13.340000        175      4  [[1, 4, 1, 1]        ]  [0->4[7] 1->0[0] 2-..]
.........................6.400000    12.020000        200      4  [[1, 2, 46, 4, 2, 2..]  [0->1[1] 1->2[4] 2-..]  *
