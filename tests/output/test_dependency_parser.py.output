
# make sure dependency parser ref is one-step optimal

passed!
passed!

# testing on wsj

number non-projective trees: 0
# example 0  passed!
# example 1  passed!
# example 2  passed!
# example 3  passed!
# example 4  passed!
# example 5  passed!
# example 6  passed!
# example 7  passed!
# example 8  passed!
# example 9  passed!

# test dependency structure without learning
## test random policy
### rels=no
0->2 1->0 2->3 3->4 4->5
### rels=yes
0->3[2] 1->0[0] 2->3[3] 3->5[3] 4->5[0]
## test rels=no
## test rels=yes

# test simple branching trees, use_aggrevate=False
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.4.000000    4.000000           1      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]  *
.4.000000    4.000000           2      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]
..4.000000    4.000000           4      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]
....0.700000    1.900000           8      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..0.000000    0.100000          10      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..........0.000000    0.000000          20      2  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *

# test simple branching trees, use_aggrevate=True
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.3.100000    3.500000           1      1  [[5, 5, 5, 5, 5]     ]  [0->1 1->2 2->3 3->..]  *
.2.400000    2.700000           2      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->0 2->5 3->..]  *
..1.600000    1.900000           4      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
....0.300000    0.200000           8      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->0 2->5 3->..]  *
..0.000000    0.000000          10      1  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]  *
..........0.000000    0.000000          20      2  [[5, 5, 5, 5, 5]     ]  [0->5 1->5 2->5 3->..]

# Testing wsj parser, labeled=False, use_pos_stream=False, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.20.200000   23.940000          1      1  [[11, 58, 6, 6, 6, ..]  [0->58 1->0 2->1 3-..]  *
.........................19.400000   21.320000         26      1  [[2, 2, 11, 11, 5, ..]  [0->1 1->2 2->3 3->..]  *
........................18.620000   21.000000         50      1  [[4, 19, 4, 4, 19, ..]  [0->1 1->2 2->3 3->..]  *
.........................18.600000   21.000000         75      2  [[8, 2, 3, 52, 8, 6..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000        100      2  [[2, 2, 3, 28, 3, 3..]  [0->1 1->2 2->3 3->..]
.........................18.520000   21.000000        125      3  [[1, 2, 21, 5, 5, 2..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000        150      3  [[1, 4, 1, 1]        ]  [0->1 1->2 2->3 3->4 ]
.........................18.540000   21.000000        175      4  [[1, 9, 9, 9, 3, 7,..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000        200      4  [[1, 2, 11, 2, 9, 9..]  [0->1 1->2 2->3 3->..]

# Testing wsj parser, labeled=False, use_pos_stream=True, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.20.220000   23.940000          1      1  [[11, 58, 6, 6, 6, ..]  [0->58 1->0 2->1 3-..]  *
.........................18.540000   21.000000         26      1  [[2, 2, 11, 11, 5, ..]  [0->1 1->2 2->3 3->..]  *
........................18.540000   21.000000         50      1  [[4, 19, 4, 4, 19, ..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000         75      2  [[8, 2, 3, 52, 8, 6..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000        100      2  [[2, 2, 3, 28, 3, 3..]  [0->1 1->2 2->3 3->..]
.........................18.540000   21.000000        125      3  [[1, 2, 21, 5, 5, 2..]  [0->1 1->2 2->3 3->..]
.........................25.180000   28.540000        150      3  [[1, 4, 1, 1]        ]  [0->4 1->0 2->0 3->0 ]
.........................18.680000   21.040000        175      4  [[1, 9, 9, 9, 3, 7,..]  [0->1 1->2 2->3 3->..]
.........................20.360000   23.960000        200      4  [[1, 2, 11, 2, 9, 9..]  [0->11 1->0 2->1 3-..]

# Testing wsj parser, labeled=True, use_pos_stream=False, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.24.440000   27.960000          1      1  [[1, 3, 3, 5, 3, 7,..]  [0->1[0] 1->2[0] 2-..]  *
.........................24.660000   28.160000         26      1  [[1, 2, 11, 5, 5, 2..]  [0->11[2] 1->0[0] 2..]
........................25.180000   28.600000         50      1  [[1, 12, 4, 4, 1, 6..]  [0->43[0] 1->0[0] 2..]
.........................25.180000   28.600000         75      2  [[1, 3, 3, 53, 5, 3..]  [0->53[4] 1->0[0] 2..]
.........................25.180000   28.600000        100      2  [[1, 9, 9, 9, 3, 7,..]  [0->27[8] 1->0[3] 2..]
.........................24.700000   28.180000        125      3  [[2, 2, 8, 2, 3, 8,..]  [0->50[0] 1->0[3] 2..]
.........................25.160000   28.520000        150      3  [[1, 2, 21, 5, 5, 2..]  [0->29[7] 1->29[10]..]
.........................24.800000   28.280000        175      4  [[1, 9, 9, 9, 3, 7,..]  [0->1[3] 1->2[3] 2-..]
.........................25.180000   28.600000        200      4  [[1, 12, 1, 5, 5, 2..]  [0->12[8] 1->0[1] 2..]

# Testing wsj parser, labeled=True, use_pos_stream=True, load_embeddings=None
|word vocab| = 55, |pos vocab| = 41
reference loss on train = 0.22
tr_lal      de_lal             N  epoch  rand_dev_truth          rand_dev_pred
.24.440000   27.960000          1      1  [[1, 3, 3, 5, 3, 7,..]  [0->1[0] 1->2[0] 2-..]  *
.........................25.180000   28.600000         26      1  [[1, 2, 11, 5, 5, 2..]  [0->11[5] 1->0[1] 2..]
........................25.180000   28.600000         50      1  [[1, 12, 4, 4, 1, 6..]  [0->1[6] 1->2[6] 2-..]
.........................24.440000   27.960000         75      2  [[1, 3, 3, 53, 5, 3..]  [0->1[0] 1->2[0] 2-..]
.........................25.160000   28.540000        100      2  [[1, 9, 9, 9, 3, 7,..]  [0->1[2] 1->2[2] 2-..]
.........................25.160000   28.540000        125      3  [[2, 2, 8, 2, 3, 8,..]  [0->1[2] 1->2[2] 2-..]
.........................25.180000   28.600000        150      3  [[1, 2, 21, 5, 5, 2..]  [0->1[8] 1->2[8] 2-..]
.........................25.180000   28.600000        175      4  [[1, 9, 9, 9, 3, 7,..]  [0->1[8] 1->2[8] 2-..]
.........................24.800000   28.280000        200      4  [[1, 12, 1, 5, 5, 2..]  [0->1[3] 1->2[3] 2-..]
